{"ast":null,"code":"var _jsxFileName = \"/Users/billy.moore/Desktop/Programming/typescript-todo/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport NewTodo from './components/NewTodo';\nimport Todos from './components/Todos';\nimport Todo from './models/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //define the empty array as a \"will be\" a list of Todo items\n  const [todos, setTodos] = useState([]);\n\n  const addTodoHandler = todoText => {\n    const newTodo = new Todo(todoText);\n    setTodos(prev => {\n      return prev.concat(newTodo);\n    });\n  };\n\n  const removeTodoHandler = todoId => {\n    setTodos(prev => {\n      return prev.filter(todo => todo.id !== todoId);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n      onAddTodo: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      items: todos,\n      onRemoveTodo: removeTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/typescript-todo/src/App.tsx"],"names":["useState","NewTodo","Todos","Todo","App","todos","setTodos","addTodoHandler","todoText","newTodo","prev","concat","removeTodoHandler","todoId","filter","todo","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMO,cAAc,GAAKC,QAAF,IAAwB;AAC7C,UAAMC,OAAO,GAAG,IAAIN,IAAJ,CAAUK,QAAV,CAAhB;AACAF,IAAAA,QAAQ,CAAGI,IAAD,IAAU;AAClB,aAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AACD,KAFO,CAAR;AAGD,GALD;;AAOA,QAAMG,iBAAiB,GAAKC,MAAF,IAAsB;AAC9CP,IAAAA,QAAQ,CAAEI,IAAI,IAAI;AAChB,aAAOA,IAAI,CAACI,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,MAAhC,CAAP;AACD,KAFO,CAAR;AAGD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,SAAS,EACPN;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AACE,MAAA,KAAK,EACHF,KAFJ;AAIE,MAAA,YAAY,EAAGO;AAJjB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhCQR,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\nimport NewTodo from './components/NewTodo';\nimport Todos from './components/Todos'\nimport Todo from './models/todo'\n\nfunction App() {\n  //define the empty array as a \"will be\" a list of Todo items\n  const [todos, setTodos] = useState<Todo[]>([])\n\n  const addTodoHandler = ( todoText: string ) => {\n    const newTodo = new Todo( todoText )\n    setTodos( (prev) => {\n      return prev.concat(newTodo)\n    })\n  }\n\n  const removeTodoHandler = ( todoId: string ) => {\n    setTodos( prev => {\n      return prev.filter(todo => todo.id !== todoId )\n    })\n  }\n\n  return (\n    <div >\n      <NewTodo \n        onAddTodo={\n          addTodoHandler\n        }\n      />\n      <Todos \n        items={\n          todos\n        }\n        onRemoveTodo={ removeTodoHandler }\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}