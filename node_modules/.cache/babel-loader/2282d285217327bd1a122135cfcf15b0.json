{"ast":null,"code":"import{useRef,useContext}from'react';import{TodosContext}from'../store/todos-context';import classes from'./NewTodo.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewTodo=function NewTodo(){//! must be explicit about what type of ref we are working with. ref = useRef() ins't enough\n//? userRef is a generic type out of the box. Angled Brackets add specifics\n//? initial useRef value must be null/undefined\nvar todosCtx=useContext(TodosContext);var todoTextInputRef=useRef(null);//! React.FormEvent is a default event for Form submission\nvar submitHandler=function submitHandler(event){event.preventDefault();var enteredText=todoTextInputRef.current.value;if((enteredText===null||enteredText===void 0?void 0:enteredText.trim().length)===0){// throw error\nreturn;}todosCtx.addTodo(enteredText);};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,className:classes.form,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Todo text\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"text\",ref:todoTextInputRef}),/*#__PURE__*/_jsx(\"button\",{children:\"Add Todo\"})]});};export default NewTodo;","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/typescript-todo/src/components/NewTodo.tsx"],"names":["useRef","useContext","TodosContext","classes","NewTodo","todosCtx","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","addTodo","form"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,UAAjB,KAAmC,OAAnC,CAEA,OAASC,YAAT,KAA6B,wBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,GAAMC,CAAAA,OAAiB,CAAG,QAApBA,CAAAA,OAAoB,EAAM,CAC5B;AACA;AACA;AACA,GAAMC,CAAAA,QAAQ,CAAGJ,UAAU,CAAEC,YAAF,CAA3B,CACA,GAAMI,CAAAA,gBAAgB,CAAGN,MAAM,CAAoB,IAApB,CAA/B,CAEA;AACA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAEC,KAAF,CAA8B,CAChDA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,WAAW,CAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C,CAEA,GAAK,CAAAF,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEG,IAAb,GAAoBC,MAApB,IAA+B,CAApC,CAAsC,CAClC;AACA,OACH,CAEDT,QAAQ,CAACU,OAAT,CAAiBL,WAAjB,EAEH,CAZD,CAcA,mBACI,cAAM,QAAQ,CAAGH,aAAjB,CAAiC,SAAS,CAAGJ,OAAO,CAACa,IAArD,wBACI,cAAO,OAAO,CAAC,MAAf,uBADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,MAAtB,CAA6B,GAAG,CAAGV,gBAAnC,EAFJ,cAGI,oCAHJ,GADJ,CAOH,CA7BD,CA+BA,cAAeF,CAAAA,OAAf","sourcesContent":["import { useRef, useContext } from 'react'\n\nimport { TodosContext } from '../store/todos-context'\nimport classes from './NewTodo.module.css'\n\nconst NewTodo: React.FC = () => {\n    //! must be explicit about what type of ref we are working with. ref = useRef() ins't enough\n    //? userRef is a generic type out of the box. Angled Brackets add specifics\n    //? initial useRef value must be null/undefined\n    const todosCtx = useContext( TodosContext )\n    const todoTextInputRef = useRef<HTMLInputElement>( null )\n\n    //! React.FormEvent is a default event for Form submission\n    const submitHandler = ( event: React.FormEvent ) => {\n        event.preventDefault()\n\n        const enteredText = todoTextInputRef.current!.value\n\n        if ( enteredText?.trim().length === 0){\n            // throw error\n            return\n        }\n\n        todosCtx.addTodo(enteredText)\n\n    }\n\n    return(\n        <form onSubmit={ submitHandler } className={ classes.form }>\n            <label htmlFor=\"text\">Todo text</label>\n            <input type='text' id='text' ref={ todoTextInputRef }/>\n            <button>Add Todo</button>\n        </form>\n    )\n}\n\nexport default NewTodo"]},"metadata":{},"sourceType":"module"}